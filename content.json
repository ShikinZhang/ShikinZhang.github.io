{"meta":{"title":"SK_Home","subtitle":"The only thing standing between you and your goal is the story you keep telling yourself as to why you can't achieve it.","description":"不务正业的折腾者","author":"Shikin","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"","slug":"ATMEGA16-GAME-CONSOLE-PROJ","date":"2017-10-13T10:51:00.991Z","updated":"2017-10-13T10:51:01.013Z","comments":true,"path":"2017/10/13/ATMEGA16-GAME-CONSOLE-PROJ/","link":"","permalink":"http://yoursite.com/2017/10/13/ATMEGA16-GAME-CONSOLE-PROJ/","excerpt":"","text":"body { max-width: 980px; border: 1px solid #ddd; outline: 1300px solid #fff; margin: 16px auto; } body .markdown-body { padding: 45px; } @font-face { font-family: fontawesome-mini; src: url(data:font/woff;charset=utf-8;base64,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) format('woff'); } @font-face { font-family: octicons-anchor; src: url(data:font/woff;charset=utf-8;base64,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) format('woff'); } .markdown-body { font-family: sans-serif; -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; color: #333333; overflow: hidden; font-family: \"Helvetica Neue\", Helvetica, \"Segoe UI\", Arial, freesans, sans-serif; font-size: 16px; line-height: 1.6; word-wrap: break-word; } .markdown-body a { background: transparent; } .markdown-body a:active, .markdown-body a:hover { outline: 0; } .markdown-body b, .markdown-body strong { font-weight: bold; } .markdown-body mark { background: #ff0; color: #000; font-style: italic; font-weight: bold; } .markdown-body sub, .markdown-body sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; } .markdown-body sup { top: -0.5em; } .markdown-body sub { bottom: -0.25em; } .markdown-body h1 { font-size: 2em; margin: 0.67em 0; } .markdown-body img { border: 0; } .markdown-body hr { -moz-box-sizing: content-box; box-sizing: content-box; height: 0; } .markdown-body pre { overflow: auto; } .markdown-body code, .markdown-body kbd, .markdown-body pre, .markdown-body samp { font-family: monospace, monospace; font-size: 1em; } .markdown-body input { color: inherit; font: inherit; margin: 0; } .markdown-body html input[disabled] { cursor: default; } .markdown-body input { line-height: normal; } .markdown-body input[type=\"checkbox\"] { box-sizing: border-box; padding: 0; } .markdown-body table { border-collapse: collapse; border-spacing: 0; } .markdown-body td, .markdown-body th { padding: 0; } .markdown-body .codehilitetable { border: 0; border-spacing: 0; } .markdown-body .codehilitetable tr { border: 0; } .markdown-body .codehilitetable pre, .markdown-body .codehilitetable div.codehilite { margin: 0; } .markdown-body .linenos, .markdown-body .code, .markdown-body .codehilitetable td { border: 0; padding: 0; } .markdown-body td:not(.linenos) .linenodiv { padding: 0 !important; } .markdown-body .code { width: 100%; } .markdown-body .linenos div pre, .markdown-body .linenodiv pre, .markdown-body .linenodiv { border: 0; -webkit-border-radius: 0; -moz-border-radius: 0; border-radius: 0; -webkit-border-top-left-radius: 3px; -webkit-border-bottom-left-radius: 3px; -moz-border-radius-topleft: 3px; -moz-border-radius-bottomleft: 3px; border-top-left-radius: 3px; border-bottom-left-radius: 3px; } .markdown-body .code div pre, .markdown-body .code div { border: 0; -webkit-border-radius: 0; -moz-border-radius: 0; border-radius: 0; -webkit-border-top-right-radius: 3px; -webkit-border-bottom-right-radius: 3px; -moz-border-radius-topright: 3px; -moz-border-radius-bottomright: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; } .markdown-body * { -moz-box-sizing: border-box; box-sizing: border-box; } .markdown-body input { font: 13px Helvetica, arial, freesans, clean, sans-serif, \"Segoe UI Emoji\", \"Segoe UI Symbol\"; line-height: 1.4; } .markdown-body a { color: #4183c4; text-decoration: none; } .markdown-body a:hover, .markdown-body a:focus, .markdown-body a:active { text-decoration: underline; } .markdown-body hr { height: 0; margin: 15px 0; overflow: hidden; background: transparent; border: 0; border-bottom: 1px solid #ddd; } .markdown-body hr:before, .markdown-body hr:after { display: table; content: \" \"; } .markdown-body hr:after { clear: both; } .markdown-body h1, .markdown-body h2, .markdown-body h3, .markdown-body h4, .markdown-body h5, .markdown-body h6 { margin-top: 15px; margin-bottom: 15px; line-height: 1.1; } .markdown-body h1 { font-size: 30px; } .markdown-body h2 { font-size: 21px; } .markdown-body h3 { font-size: 16px; } .markdown-body h4 { font-size: 14px; } .markdown-body h5 { font-size: 12px; } .markdown-body h6 { font-size: 11px; } .markdown-body blockquote { margin: 0; } .markdown-body ul, .markdown-body ol { padding: 0; margin-top: 0; margin-bottom: 0; } .markdown-body ol ol, .markdown-body ul ol { list-style-type: lower-roman; } .markdown-body ul ul ol, .markdown-body ul ol ol, .markdown-body ol ul ol, .markdown-body ol ol ol { list-style-type: lower-alpha; } .markdown-body dd { margin-left: 0; } .markdown-body code, .markdown-body pre, .markdown-body samp { font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; font-size: 12px; } .markdown-body pre { margin-top: 0; margin-bottom: 0; } .markdown-body kbd { background-color: #e7e7e7; background-image: -moz-linear-gradient(#fefefe, #e7e7e7); background-image: -webkit-linear-gradient(#fefefe, #e7e7e7); background-image: linear-gradient(#fefefe, #e7e7e7); background-repeat: repeat-x; border-radius: 2px; border: 1px solid #cfcfcf; color: #000; padding: 3px 5px; line-height: 10px; font: 11px Consolas, \"Liberation Mono\", Menlo, Courier, monospace; display: inline-block; } .markdown-body>*:first-child { margin-top: 0 !important; } .markdown-body>*:last-child { margin-bottom: 0 !important; } .markdown-body .headeranchor-link { position: absolute; top: 0; bottom: 0; left: 0; display: block; padding-right: 6px; padding-left: 30px; margin-left: -30px; } .markdown-body .headeranchor-link:focus { outline: none; } .markdown-body h1, .markdown-body h2, .markdown-body h3, .markdown-body h4, .markdown-body h5, .markdown-body h6 { position: relative; margin-top: 1em; margin-bottom: 16px; font-weight: bold; line-height: 1.4; } .markdown-body h1 .headeranchor, .markdown-body h2 .headeranchor, .markdown-body h3 .headeranchor, .markdown-body h4 .headeranchor, .markdown-body h5 .headeranchor, .markdown-body h6 .headeranchor { display: none; color: #000; vertical-align: middle; } .markdown-body h1:hover .headeranchor-link, .markdown-body h2:hover .headeranchor-link, .markdown-body h3:hover .headeranchor-link, .markdown-body h4:hover .headeranchor-link, .markdown-body h5:hover .headeranchor-link, .markdown-body h6:hover .headeranchor-link { height: 1em; padding-left: 8px; margin-left: -30px; line-height: 1; text-decoration: none; } .markdown-body h1:hover .headeranchor-link .headeranchor, .markdown-body h2:hover .headeranchor-link .headeranchor, .markdown-body h3:hover .headeranchor-link .headeranchor, .markdown-body h4:hover .headeranchor-link .headeranchor, .markdown-body h5:hover .headeranchor-link .headeranchor, .markdown-body h6:hover .headeranchor-link .headeranchor { display: inline-block; } .markdown-body h1 { padding-bottom: 0.3em; font-size: 2.25em; line-height: 1.2; border-bottom: 1px solid #eee; } .markdown-body h2 { padding-bottom: 0.3em; font-size: 1.75em; line-height: 1.225; border-bottom: 1px solid #eee; } .markdown-body h3 { font-size: 1.5em; line-height: 1.43; } .markdown-body h4 { font-size: 1.25em; } .markdown-body h5 { font-size: 1em; } .markdown-body h6 { font-size: 1em; color: #777; } .markdown-body p, .markdown-body blockquote, .markdown-body ul, .markdown-body ol, .markdown-body dl, .markdown-body table, .markdown-body pre, .markdown-body .admonition { margin-top: 0; margin-bottom: 16px; } .markdown-body hr { height: 4px; padding: 0; margin: 16px 0; background-color: #e7e7e7; border: 0 none; } .markdown-body ul, .markdown-body ol { padding-left: 2em; } .markdown-body ul ul, .markdown-body ul ol, .markdown-body ol ol, .markdown-body ol ul { margin-top: 0; margin-bottom: 0; } .markdown-body li>p { margin-top: 16px; } .markdown-body dl { padding: 0; } .markdown-body dl dt { padding: 0; margin-top: 16px; font-size: 1em; font-style: italic; font-weight: bold; } .markdown-body dl dd { padding: 0 16px; margin-bottom: 16px; } .markdown-body blockquote { padding: 0 15px; color: #777; border-left: 4px solid #ddd; } .markdown-body blockquote>:first-child { margin-top: 0; } .markdown-body blockquote>:last-child { margin-bottom: 0; } .markdown-body table { display: block; width: 100%; overflow: auto; word-break: normal; word-break: keep-all; } .markdown-body table th { font-weight: bold; } .markdown-body table th, .markdown-body table td { padding: 6px 13px; border: 1px solid #ddd; } .markdown-body table tr { background-color: #fff; border-top: 1px solid #ccc; } .markdown-body table tr:nth-child(2n) { background-color: #f8f8f8; } .markdown-body img { max-width: 100%; -moz-box-sizing: border-box; box-sizing: border-box; } .markdown-body code, .markdown-body samp { padding: 0; padding-top: 0.2em; padding-bottom: 0.2em; margin: 0; font-size: 85%; background-color: rgba(0,0,0,0.04); border-radius: 3px; } .markdown-body code:before, .markdown-body code:after { letter-spacing: -0.2em; content: \"\\00a0\"; } .markdown-body pre>code { padding: 0; margin: 0; font-size: 100%; word-break: normal; white-space: pre; background: transparent; border: 0; } .markdown-body .codehilite { margin-bottom: 16px; } .markdown-body .codehilite pre, .markdown-body pre { padding: 16px; overflow: auto; font-size: 85%; line-height: 1.45; background-color: #f7f7f7; border-radius: 3px; } .markdown-body .codehilite pre { margin-bottom: 0; word-break: normal; } .markdown-body pre { word-wrap: normal; } .markdown-body pre code { display: inline; max-width: initial; padding: 0; margin: 0; overflow: initial; line-height: inherit; word-wrap: normal; background-color: transparent; border: 0; } .markdown-body pre code:before, .markdown-body pre code:after { content: normal; } /* Admonition */ .markdown-body .admonition { -webkit-border-radius: 3px; -moz-border-radius: 3px; position: relative; border-radius: 3px; border: 1px solid #e0e0e0; border-left: 6px solid #333; padding: 10px 10px 10px 30px; } .markdown-body .admonition table { color: #333; } .markdown-body .admonition p { padding: 0; } .markdown-body .admonition-title { font-weight: bold; margin: 0; } .markdown-body .admonition>.admonition-title { color: #333; } .markdown-body .attention>.admonition-title { color: #a6d796; } .markdown-body .caution>.admonition-title { color: #d7a796; } .markdown-body .hint>.admonition-title { color: #96c6d7; } .markdown-body .danger>.admonition-title { color: #c25f77; } .markdown-body .question>.admonition-title { color: #96a6d7; } .markdown-body .note>.admonition-title { color: #d7c896; } .markdown-body .admonition:before, .markdown-body .attention:before, .markdown-body .caution:before, .markdown-body .hint:before, .markdown-body .danger:before, .markdown-body .question:before, .markdown-body .note:before { font: normal normal 16px fontawesome-mini; -moz-osx-font-smoothing: grayscale; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; line-height: 1.5; color: #333; position: absolute; left: 0; top: 0; padding-top: 10px; padding-left: 10px; } .markdown-body .admonition:before { content: \"\\f056\\00a0\"; color: 333; } .markdown-body .attention:before { content: \"\\f058\\00a0\"; color: #a6d796; } .markdown-body .caution:before { content: \"\\f06a\\00a0\"; color: #d7a796; } .markdown-body .hint:before { content: \"\\f05a\\00a0\"; color: #96c6d7; } .markdown-body .danger:before { content: \"\\f057\\00a0\"; color: #c25f77; } .markdown-body .question:before { content: \"\\f059\\00a0\"; color: #96a6d7; } .markdown-body .note:before { content: \"\\f040\\00a0\"; color: #d7c896; } .markdown-body .admonition::after { content: normal; } .markdown-body .attention { border-left: 6px solid #a6d796; } .markdown-body .caution { border-left: 6px solid #d7a796; } .markdown-body .hint { border-left: 6px solid #96c6d7; } .markdown-body .danger { border-left: 6px solid #c25f77; } .markdown-body .question { border-left: 6px solid #96a6d7; } .markdown-body .note { border-left: 6px solid #d7c896; } .markdown-body .admonition>*:first-child { margin-top: 0 !important; } .markdown-body .admonition>*:last-child { margin-bottom: 0 !important; } /* progress bar*/ .markdown-body .progress { display: block; width: 300px; margin: 10px 0; height: 24px; -webkit-border-radius: 3px; -moz-border-radius: 3px; border-radius: 3px; background-color: #ededed; position: relative; box-shadow: inset -1px 1px 3px rgba(0, 0, 0, .1); } .markdown-body .progress-label { position: absolute; text-align: center; font-weight: bold; width: 100%; margin: 0; line-height: 24px; color: #333; text-shadow: 1px 1px 0 #fefefe, -1px -1px 0 #fefefe, -1px 1px 0 #fefefe, 1px -1px 0 #fefefe, 0 1px 0 #fefefe, 0 -1px 0 #fefefe, 1px 0 0 #fefefe, -1px 0 0 #fefefe, 1px 1px 2px #000; -webkit-font-smoothing: antialiased !important; white-space: nowrap; overflow: hidden; } .markdown-body .progress-bar { height: 24px; float: left; -webkit-border-radius: 3px; -moz-border-radius: 3px; border-radius: 3px; background-color: #96c6d7; box-shadow: inset 0 1px 0 rgba(255, 255, 255, .5), inset 0 -1px 0 rgba(0, 0, 0, .1); background-size: 30px 30px; background-image: -webkit-linear-gradient( 135deg, rgba(255, 255, 255, .4) 27%, transparent 27%, transparent 52%, rgba(255, 255, 255, .4) 52%, rgba(255, 255, 255, .4) 77%, transparent 77%, transparent ); background-image: -moz-linear-gradient( 135deg, rgba(255, 255, 255, .4) 27%, transparent 27%, transparent 52%, rgba(255, 255, 255, .4) 52%, rgba(255, 255, 255, .4) 77%, transparent 77%, transparent ); background-image: -ms-linear-gradient( 135deg, rgba(255, 255, 255, .4) 27%, transparent 27%, transparent 52%, rgba(255, 255, 255, .4) 52%, rgba(255, 255, 255, .4) 77%, transparent 77%, transparent ); background-image: -o-linear-gradient( 135deg, rgba(255, 255, 255, .4) 27%, transparent 27%, transparent 52%, rgba(255, 255, 255, .4) 52%, rgba(255, 255, 255, .4) 77%, transparent 77%, transparent ); background-image: linear-gradient( 135deg, rgba(255, 255, 255, .4) 27%, transparent 27%, transparent 52%, rgba(255, 255, 255, .4) 52%, rgba(255, 255, 255, .4) 77%, transparent 77%, transparent ); } .markdown-body .progress-100plus .progress-bar { background-color: #a6d796; } .markdown-body .progress-80plus .progress-bar { background-color: #c6d796; } .markdown-body .progress-60plus .progress-bar { background-color: #d7c896; } .markdown-body .progress-40plus .progress-bar { background-color: #d7a796; } .markdown-body .progress-20plus .progress-bar { background-color: #d796a6; } .markdown-body .progress-0plus .progress-bar { background-color: #c25f77; } .markdown-body .candystripe-animate .progress-bar{ -webkit-animation: animate-stripes 3s linear infinite; -moz-animation: animate-stripes 3s linear infinite; animation: animate-stripes 3s linear infinite; } @-webkit-keyframes animate-stripes { 0% { background-position: 0 0; } 100% { background-position: 60px 0; } } @-moz-keyframes animate-stripes { 0% { background-position: 0 0; } 100% { background-position: 60px 0; } } @keyframes animate-stripes { 0% { background-position: 0 0; } 100% { background-position: 60px 0; } } .markdown-body .gloss .progress-bar { box-shadow: inset 0 4px 12px rgba(255, 255, 255, .7), inset 0 -12px 0 rgba(0, 0, 0, .05); } /* Multimarkdown Critic Blocks */ .markdown-body .critic_mark { background: #ff0; } .markdown-body .critic_delete { color: #c82829; text-decoration: line-through; } .markdown-body .critic_insert { color: #718c00 ; text-decoration: underline; } .markdown-body .critic_comment { color: #8e908c; font-style: italic; } .markdown-body .headeranchor { font: normal normal 16px octicons-anchor; line-height: 1; display: inline-block; text-decoration: none; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; } .headeranchor:before { content: '\\f05c'; } .markdown-body .task-list-item { list-style-type: none; } .markdown-body .task-list-item+.task-list-item { margin-top: 3px; } .markdown-body .task-list-item input { margin: 0 4px 0.25em -20px; vertical-align: middle; } /* Media */ @media only screen and (min-width: 480px) { .markdown-body { font-size:14px; } } @media only screen and (min-width: 768px) { .markdown-body { font-size:16px; } } @media print { .markdown-body * { background: transparent !important; color: black !important; filter:none !important; -ms-filter: none !important; } .markdown-body { font-size:12pt; max-width:100%; outline:none; border: 0; } .markdown-body a, .markdown-body a:visited { text-decoration: underline; } .markdown-body .headeranchor-link { display: none; } .markdown-body a[href]:after { content: \" (\" attr(href) \")\"; } .markdown-body abbr[title]:after { content: \" (\" attr(title) \")\"; } .markdown-body .ir a:after, .markdown-body a[href^=\"javascript:\"]:after, .markdown-body a[href^=\"#\"]:after { content: \"\"; } .markdown-body pre { white-space: pre; white-space: pre-wrap; word-wrap: break-word; } .markdown-body pre, .markdown-body blockquote { border: 1px solid #999; padding-right: 1em; page-break-inside: avoid; } .markdown-body .progress, .markdown-body .progress-bar { -moz-box-shadow: none; -webkit-box-shadow: none; box-shadow: none; } .markdown-body .progress { border: 1px solid #ddd; } .markdown-body .progress-bar { height: 22px; border-right: 1px solid #ddd; } .markdown-body tr, .markdown-body img { page-break-inside: avoid; } .markdown-body img { max-width: 100% !important; } .markdown-body p, .markdown-body h2, .markdown-body h3 { orphans: 3; widows: 3; } .markdown-body h2, .markdown-body h3 { page-break-after: avoid; } } ATMEGA16_GAME_CONSOLE PROJTimer/Counter 和 Interrupt Timer/Counter2 产生PWM控制LCD背光亮度 因为我用PD7引脚产生的PWM去控制LCD的背光的亮度，查找PD7对应的Alternate Function是 Timer/Counter2 Output Compare Match Output， 所以对应使用Timer/Counter2 TCCR2 配置 BIT Function 配置 说明 7 Force Output Compare 0 不用管，自己设置为0就好 3,6 WGM2(1:0): Waveform Generation Mode 11 设置成Fast PWM 模式 5:4 COM2（1:0）: Compare Match Output Mode 11 因为需要输出，所以Set OC2 on compare match 2:0 CS2(2:0): Clock Select 000 这个是时钟分频，开心就好，这里没有所谓 因为在这里只是单纯的PWM输出，在系统内不需要中断来对应操作，所以其他的配置中断什么的寄存器不用管。 然后直接设置ORC2这个寄存器就好，会根据这个寄存器的值，来控制PWM占空比。 Timer/Counter 1 配置定时器中断 使用 Timer/Counter 1 的定时器中断来控制整个系统，例如贪吃蛇游戏里，需要大概1秒钟蛇移动一格，因此在一次定时器中断中，控制蛇移动一格。所以在 Timer/Counter 1 中主要是配置去控制进入中断的时间。 Timer/Counter 1 有很多模式，在这里配置的是用Normal Mode，因此很多寄存器直接使用默认的就好，所以只需要写TCNT1H, TCNT1L, TIMSK TCCR1B 这几个寄存器就好，其他的就默认配置成 Normal Mode TIMSK 因为使用的是Normal Mode 直接是overflow的中断，所以在TIMSK将TOIE1(Timer/Counter1, Overflow Interrupt Enable) 设置为1就好。 TCCR1B 查询 DATASHEET 113页面， WGM1 都是0 ICNC1和ICES1不需要管，只需要配置时钟分频即可。使用的外部晶振是8MHz，为了计算方便，使用8分频到1MHz，因此CS1(2:0)配置为010即可。 TCNT1 TCNT1 就是 value of the counter， 在 Normal Mode 中 TCNT1 计数到16位满之后，产生overflow中断（这一点也对应中断向量）。由于计数器的时钟分频后得到1MHz，以及16位对应最大的十进制数是65535，因此选个好计算的数50000作为计数的个数，从而每1/20秒(50ms)产生一次中断。 所以计算65535-50000 = 15535对应16进制数为0x3CAF, TCNT1分为两个部分TCNT1H和TCNT1L TCNT1H = 0X3C; TCNT1L = 0XAF; 即可。 按键中断 如果在while循环中每次都要检测按键按下的情况，特别浪费资源，因此，当有一个按键按下的时候，进入中断，然后检测是哪一个按键按下后，再进行按键的检测。 我在原理图上连接的按键中断是到PD2，对应的是Alternate Function 是External Interrupt 0 Input，所以之后配置INT0 即可 配置GICR(General Interrupt Control Register) DATASHEET 48页对应寄存器说明，IVSEL和IVCE可以不用管（没有管能配置出来中断，就没管了） 设置INT0位为1即可 配置MCUCR (MCU Control Register) 中断可以配置成4种模式，低电平，任何逻辑，上升沿，下降沿。一般而言选择当有按键按下时进行进行中断触发，因此选择上升沿出发。 对应在INT0中的上升沿出发，配置ISC0(1:0) = 11 即可。 LCD SPI Configuration In SPI, the uController is master and the LCD is the slave, so set the SCK, MOSI pin as the OUTPUT and MISO as INPUT. Then from page 138 in ATMEGA16 DATASHEET, in initialization, just configure SPCR. SPCR = (1&lt;&lt;SPE)|(1&lt;&lt;MSTR)|(1&lt;&lt;SPR0); Then, the uController can send data by this function void SPI_MasterTransmit(char cData) { /* Start transmission */ SPDR = cData; /* Wait for transmission complete */ while(!(SPSR &amp; (1&lt;&lt;SPIF))); } LCD Configuration Send Command LCD_CS set 0 , because the CS pin in LCD is negative logic. LCD_CD set 0 , which means what the MOSI send is COMMAND. Using SPI send COMMAND. LCD_CS set 1 Send Data LCD_CS set 0 , because the CS pin in LCD is negative logic. LCD_CD set 0 , which means what the MOSI send is DATA. Using SPI send DATA. LCD_CS set 1 Initialization The Initialization code can be found in LMS. Select Page Some basic thing you should know what is Column and Page, which is illustrated in page 6 in LCD_dogs102-6e.pdf From page 12 in LCD controller DATASHEET, the high 4 bits of COMMEND is 1011(binary) and the low 4 bits of COMMAND is the page number. For example, LCD_command_tx(0xB2); this example select page 2 in LCD. Select Column Since there are 0~101 columns in LCD, the bits of columns are more than 4 bits, so it cannot be selected as page. Actually, the number of columns can be expressed by 8 bits, which be divided to two 4 bits. for example LCD_command_tx(0x02); LCD_command_tx(0x12); this example select 34th(0x22) columns. Send Data to draw After we have selected the Column and Page, we can send data to draw something on LCD. simple example LCD_command_tx(0x02); LCD_command_tx(0x12); LCD_command_tx(0xB2); LCD_data_tx(0xFF); this example select 34th column and 2nd page. And then write all of this part 1, so there shoud be a line on 34th column and 2nd 8 pixels. Actually is 35 column and 3rd 8 pixels, becasue in code, everything start from 0 not 1.","categories":[],"tags":[]},{"title":"ATMEGA16_GAME_CONSOLE PROJ","slug":"ATMEGA16-GAME-CONSOLE-PROJ","date":"2017-10-10T23:03:25.000Z","updated":"2017-10-15T04:33:33.164Z","comments":true,"path":"2017/10/11/ATMEGA16-GAME-CONSOLE-PROJ/","link":"","permalink":"http://yoursite.com/2017/10/11/ATMEGA16-GAME-CONSOLE-PROJ/","excerpt":"","text":"Timer/Counter 和 InterruptTimer/Counter2 产生PWM控制LCD背光亮度因为我用PD7引脚产生的PWM去控制LCD的背光的亮度，查找PD7对应的Alternate Function是 Timer/Counter2 Output Compare Match Output， 所以对应使用Timer/Counter2 TCCR2 配置 BIT Function 配置 说明 7 Force Output Compare 0 不用管，自己设置为0就好 3,6 WGM2(1:0): Waveform Generation Mode 11 设置成Fast PWM 模式 5:4 COM2（1:0）: Compare Match Output Mode 11 因为需要输出，所以Set OC2 on compare match 2:0 CS2(2:0): Clock Select 000 这个是时钟分频，开心就好，这里没有所谓 因为在这里只是单纯的PWM输出，在系统内不需要中断来对应操作，所以其他的配置中断什么的寄存器不用管。 然后直接设置ORC2这个寄存器就好，会根据这个寄存器的值，来控制PWM占空比。 Timer/Counter 1 配置定时器中断使用 Timer/Counter 1 的定时器中断来控制整个系统，例如贪吃蛇游戏里，需要大概1秒钟蛇移动一格，因此在一次定时器中断中，控制蛇移动一格。所以在 Timer/Counter 1 中主要是配置去控制进入中断的时间。 Timer/Counter 1 有很多模式，在这里配置的是用Normal Mode，因此很多寄存器直接使用默认的就好，所以只需要写TCNT1H, TCNT1L, TIMSK TCCR1B 这几个寄存器就好，其他的就默认配置成 Normal Mode TIMSK因为使用的是Normal Mode 直接是overflow的中断，所以在TIMSK将TOIE1(Timer/Counter1, Overflow Interrupt Enable) 设置为1就好。 TCCR1B查询 DATASHEET 113页面， WGM1 都是0 ICNC1和ICES1不需要管，只需要配置时钟分频即可。使用的外部晶振是8MHz，为了计算方便，使用8分频到1MHz，因此CS1(2:0)配置为010即可。 TCNT1TCNT1 就是 value of the counter， 在 Normal Mode 中 TCNT1 计数到16位满之后，产生overflow中断（这一点也对应中断向量）。由于计数器的时钟分频后得到1MHz，以及16位对应最大的十进制数是65535，因此选个好计算的数50000作为计数的个数，从而每1/20秒(50ms)产生一次中断。 所以计算65535-50000 = 15535对应16进制数为0x3CAF, TCNT1分为两个部分TCNT1H和TCNT1L TCNT1H = 0X3C;TCNT1L = 0XAF; 即可。 按键中断如果在while循环中每次都要检测按键按下的情况，特别浪费资源，因此，当有一个按键按下的时候，进入中断，然后检测是哪一个按键按下后，再进行按键的检测。 我在原理图上连接的按键中断是到PD2，对应的是Alternate Function 是External Interrupt 0 Input，所以之后配置INT0 即可 配置GICR(General Interrupt Control Register)DATASHEET 48页对应寄存器说明，IVSEL和IVCE可以不用管（没有管能配置出来中断，就没管了） 设置INT0位为1即可 配置MCUCR (MCU Control Register)中断可以配置成4种模式，低电平，任何逻辑，上升沿，下降沿。一般而言选择当有按键按下时进行进行中断触发，因此选择上升沿出发。 对应在INT0中的上升沿出发，配置ISC0(1:0) = 11 即可。 LCDSPI ConfigurationIn SPI, the uController is master and the LCD is the slave, so set the SCK, MOSI pin as the OUTPUT and MISO as INPUT. Then from page 138 in ATMEGA16 DATASHEET, in initialization, just configure SPCR. SPCR = (1&lt;&lt;SPE)|(1&lt;&lt;MSTR)|(1&lt;&lt;SPR0); Then, the uController can send data by this function void SPI_MasterTransmit(char cData){ SPDR = cData; while(!(SPSR &amp; (1&lt;&lt;SPIF)));} LCD ConfigurationSend CommandLCD_CS set 0 , because the CS pin in LCD is negative logic. LCD_CD set 0 , which means what the MOSI send is COMMAND. Using SPI send COMMAND. LCD_CS set 1 Send DataLCD_CS set 0 , because the CS pin in LCD is negative logic. LCD_CD set 1 , which means what the MOSI send is DATA. Using SPI send DATA. LCD_CS set 1 InitializationThe Initialization code can be found in LMS. Select PageSome basic thing you should know what is Column and Page, which is illustrated in page 6 in LCD_dogs102-6e.pdf From page 12 in LCD controller DATASHEET, the high 4 bits of COMMEND is 1011(binary) and the low 4 bits of COMMAND is the page number. For example, LCD_command_tx(0xB2); this example select page 2 in LCD. Select ColumnSince there are 0~101 columns in LCD, the bits of columns are more than 4 bits, so it cannot be selected as page. Actually, the number of columns can be expressed by 8 bits, which be divided to two 4 bits. for example LCD_command_tx(0x02); LCD_command_tx(0x12); this example select 34th(0x22) columns. Send Data to drawAfter we have selected the Column and Page, we can send data to draw something on LCD. simple example LCD_command_tx(0x02); LCD_command_tx(0x12); LCD_command_tx(0xB2); LCD_data_tx(0xFF); this example select 34th column and 2nd page. And then write all of this part 1, so there shoud be a line on 34th column and 2nd 8 pixels. Actually is 35 column and 3rd 8 pixels, becasue in code, everything start from 0 not 1.","categories":[],"tags":[]},{"title":"Installing AVR STUDIO 4 issue","slug":"issue","date":"2017-10-09T01:44:03.000Z","updated":"2017-10-14T04:48:30.291Z","comments":true,"path":"2017/10/09/issue/","link":"","permalink":"http://yoursite.com/2017/10/09/issue/","excerpt":"","text":"ISSUE从LMS上下载的AVR STUDIO 会遇到一个问题，点击到installing的时候，会最小化然后就安装不了。 SOLUTION进入安全模式下安装。 WIN10 进入安全模式 按 4 或者 F4 键进入安全模式，然后安装AVR STUIDO 4.19 即可","categories":[],"tags":[]},{"title":"vocabulary","slug":"vocabulary","date":"2017-09-27T02:48:07.000Z","updated":"2017-10-09T00:46:58.398Z","comments":true,"path":"2017/09/27/vocabulary/","link":"","permalink":"http://yoursite.com/2017/09/27/vocabulary/","excerpt":"","text":"V I imminent 即将来临的，紧迫的 stern 严肃的 prescient 有先见之明的 prophetic 前兆的，语言的 apathetic 麻木的 sonorous （声音）洪亮的，郑重的 neutralize 中和 enigma 谜 auction 拍卖 exclusive n.独家 / adj.独占地，仅仅 deviate 偏离 succumb 屈服于 recoil 畏缩 yield to 收益 verse 诗 singular 非凡的，奇特的 archaic 古老的，过去的 counterfeit v.伪造 / n.伪造品 / adj.伪造的 incline v.倾斜，倾向 / n.斜坡 epilogue n.结语 hyperbole n.夸张 impenetrable 费解的 immutable 一成不变的 proprietary n.所有权 / a. 其自身，所有的 didactic 教导的 lopsided 片面的 disclosure 泄露 brook 容忍 repudiate 否认 fecundity n.肥沃，富饶 fertility n.肥沃，生育能力 beneficence n.慈善 habitual a.惯用的 cordiality n.和睦，真挚 irascibility n.易怒 conviviality n.欢乐 exasperation n.恼怒 feeble a.n.v. 微弱，削弱，弱点，衰弱 ameliorate 改善 Oct 8th decry v. 诽谤 condone v. 纵容 remedy v. 补救 boast of v. 吹牛 downplay v. 淡化 sift v. 筛选 neophyte n. 新手 novice n. 初学者 pragmatists n. 实用主义者 zealot n. 狂热者 intricate a. 错综复杂 unwarranted a. 莫须有 groundless a. 莫须有 loath v. 厌恶，不愿意的 Oct 9th supposition n. 假想 anomalous a. 异常的 haphazard a./n./adv. 偶然 mar v. 损伤 grandstand a./v. 哗众取宠 vacillation n. 动摇 compassionate a. 富于同情心的 nepotistic a. 任人唯亲的 contagious a. 传染性的 irk a. 激怒 apparent a. 明显的 asset n. 财富 tendentiousness n. 倾向性 blemish n. 缺陷，瑕疵 inveterate a. 根深蒂固 paradigm n. 范例 hodgepodge n. 大杂烩 patchwork n. 拼凑物 fractious a. 易怒的 insightful a. 有深刻见解的 affable a. 和蔼可亲的 sagacious a. 睿智的,有远见的 heterogeneous a. 多相的,由不同成分形成的 disparate a. 不同的，不相干的 mediocre a. 普通的，平凡的 intriguing a. 有趣的 engaging a. 迷人的","categories":[],"tags":[]},{"title":"Design of Discrete IIR Filter","slug":"filters","date":"2017-09-02T03:20:06.000Z","updated":"2017-09-03T02:43:36.448Z","comments":true,"path":"2017/09/02/filters/","link":"","permalink":"http://yoursite.com/2017/09/02/filters/","excerpt":"","text":"Discrete time IIR filter designs based on transformation of continuous time designs are easy to carry out Bilinear TransformationBilinear Transformation bewteen s-plane and z-plane $$ s = \\frac{ 2 }{ T } \\frac{1-z^{-1}}{1+z^{-1}} \\ z = \\frac{1+(T/2)s}{1-(T/2)s}$$ The imaginary axis $s = j\\Omega$ is mapped onto the unit circle $e^{j\\omega}$ $$ \\Omega = \\frac{2}{T} tan(\\omega/2) \\ \\omega = 2 arctan(\\Omega T/2)$$ Here is the figure shows the s-plane and z-plane","categories":[{"name":"Signal","slug":"Signal","permalink":"http://yoursite.com/categories/Signal/"}],"tags":[]},{"title":"lowpass_filter_design","slug":"lowpass-filter-design","date":"2017-09-01T09:11:27.000Z","updated":"2017-09-01T10:51:56.947Z","comments":true,"path":"2017/09/01/lowpass-filter-design/","link":"","permalink":"http://yoursite.com/2017/09/01/lowpass-filter-design/","excerpt":"","text":"Butterworth Lowpass FilterTheoryThe magnitude-squared response of an analog lowpass Butterworth filter is given by $$ |H_a(j\\Omega) |^2 = \\frac{1}{1+(\\Omega/\\Omega_c)^{2N}}$$ Passband ripple: $\\delta_s$ Stopband ripple: $\\delta_s$ $$ |H_a(j\\Omega_p) |^2 = \\frac{1}{1+(\\Omega_p/\\Omega_c)^{2N}} = (1-\\delta_p)^2 = \\frac{1}{1+\\epsilon^2}$$ $$ |H_a(j\\Omega_s) |^2 = \\frac{1}{1+(\\Omega_s/\\Omega_c)^{2N}} = \\delta_s^2 = \\frac{1}{A^2}$$ Solving above $$ N = \\frac{1}{2} \\frac{log{10}[(A^2-1)/\\epsilon^2]}{log{10}(\\Omega_s/\\Omega_p)}$$ ExamplePassband edge frequency : $\\Omega_p = 1$ Stopband edge frequency : $\\Omega_s = 2.56$ Passband ripple: $\\delta_p = 0.01$ Stopband ripple: $\\delta_s = 0.005$ calculating $\\epsilon$ and $A$ $$ (1-\\delta_p)^2 = \\frac{1}{1+\\epsilon^2}$$ $$ \\delta_s^2 = \\frac{1}{A^2}$$ $\\epsilon = 0.1425$ and $A = 200$ , Then calculating N $$ N = \\frac{1}{2} \\frac{log{10}[(A^2-1)/\\epsilon^2]}{log{10}(\\Omega_s/\\Omega_p)} = 7.7092$$ $N$ should be an integer, so $N = 8$ Then calculating $\\Omega_c$ $$ (\\Omega_p/\\Omega_c)^{2N} = \\epsilon^2$$ or $$ \\frac{1}{1+(\\Omega_s/\\Omega_c)^{2N}} = \\delta_s^2$$ It can gives the minimum of $\\Omega_c = 1.2785 $ and maximum of $\\Omega_c = 1.3201$ Here shows the diffrent $\\Omega_c $ of the magnitude response","categories":[{"name":"Signal","slug":"Signal","permalink":"http://yoursite.com/categories/Signal/"}],"tags":[]},{"title":"analog_filter_design","slug":"analog-filter-design","date":"2017-09-01T06:14:29.000Z","updated":"2017-09-01T11:10:06.521Z","comments":true,"path":"2017/09/01/analog-filter-design/","link":"","permalink":"http://yoursite.com/2017/09/01/analog-filter-design/","excerpt":"","text":"Analog filter desingUsing ptototype lowpass filter to design highpass filter; So, the transfer function of prototype lowpass filter: $H_{LP}(s)$ There is the Spectral transformation : $ s = F(\\hat{s}) $ Then, we can get the Designed Filter : $HD (\\hat{s}) = H{LP} (s)|_{s = F(\\hat{s})}$ Highpass Filter DesignTheoryDefine desired passband edge of highpass filter: $\\hat\\Omega_p$ and passband edge of prototype lowpass filter: $\\Omega_p$ . Here gives the Spectral Transformation:$$ s = \\frac{\\Omega_p \\hat\\Omega_p } {\\hat{s}}$$ And on the imaginary axis$$ \\Omega = -\\frac{\\Omega_p \\hat\\Omega_p}{\\hat\\Omega}$$ Here is the figure showing the relationship between $\\Omega$ and $\\hat\\Omega$ ExampleSuppose the passband ripple $\\deltap (s) = 0.1$ and the $H{LP}(s) = \\frac{1}{1+s}$ Then, Since $ |H_{LP}(\\Omega_p) |= 1-\\delta_p(s)$, we can get the $\\Omega_p = 0.4843$ If we want to get the passband frequency of HighPass Filter $\\hat\\Omega_p = 5$ . Then the Spectral Transformation is: $$ s = \\frac{0.4843 \\times 5}{\\hat{s}}$$ So the Designed HighPass Filter is $$ HD(\\hat{s}) = \\frac{1}{1+s} | {s = F(\\hat{s})} = \\frac{1}{1+\\frac{0.4843 \\times 5}{\\hat{s}}} = \\frac{\\hat{s}}{\\hat{s} + 2.4215}$$ Here is the plot of this HighPass Filter and it shows that the $\\hat\\Omega_p = 5$ Bandpass Filter DesignTheoryDesiered passband edges of bandpass filter: $\\hat\\Omega{p1} , \\hat\\Omega{p2}$ Passband edge of prototype lowpass filter: $\\Omega_p$ Spectral Transformation $$ s = \\Omegap \\frac{\\hat{s}^2 + \\hat\\Omega{p1}\\hat\\Omega{p2}}{\\hat{s}(\\hat\\Omega{p2} - \\hat\\Omega_{p1})}$$ And on the imaginary axis $$ \\Omega = -\\Omegap \\frac{\\hat\\Omega{p1}\\hat\\Omega{p2} - \\hat\\Omega^2}{\\hat\\Omega(\\hat\\Omega{p2}-\\hat\\Omega_{p1})}$$ Here is the figure showing the relationship between $\\Omega$ and $\\hat\\Omega$ Both passband and stopband edge frequencies must exhibit symmetry with respect to $\\hat\\Omega_0$ $$ \\hat\\Omega0^2 = \\hat\\Omega{p1}\\hat\\Omega{p2} = \\hat\\Omega{s1}\\hat\\Omega_{s2}$$ ExamplePassband is [5,7] Stopband: [0,3] and above 9 Passband ripple: $\\delta_p = 0.01$ Stopband ripple: $\\delta_s = 0.005$ The product of passband edge frequencies : $5 \\times 7 = 35$ The product of stopband edge frequencies : $3 \\times 9 = 27$ Adjust lower stopband edge frequency: $35 / 9 = 3.89$ Suppose the $\\Omega_p = 1$, the Spectral Transformation: $$ s = \\Omegap \\frac{\\hat{s}^2 + \\hat\\Omega{p1}\\hat\\Omega{p2}}{\\hat{s}(\\hat\\Omega{p2} - \\hat\\Omega_{p1})} = \\frac{\\hat{s}^2 + 35}{2\\hat{s}}$$ On imaginary axis $$ \\Omega = -\\Omegap \\frac{\\hat\\Omega{p1}\\hat\\Omega{p2} - \\hat\\Omega^2}{\\hat\\Omega(\\hat\\Omega{p2}-\\hat\\Omega_{p1})} = - \\frac{35-\\hat\\Omega^2}{2\\hat\\Omega}$$ Stopband edge of prototype lowpass filter $$ \\Omega_s = -\\frac{35 -81}{2 \\times 9} = 2.56$$ Then design the specification for prototype lowpass filter Passband:[0,1] stopband: above 2.56 Passband ripple: $\\delta_p = 0.01$ Stopband ripple: $\\delta_s = 0.005$ Here shows the calculation of the prototype lowpass filter 8 order Butterworth filter with cutoff frequency 1.3178 satisfies specifications. then from Spectral Transformation in imaginary axis function get the magnitude response $$ |H_a(j\\hat\\Omega) |^2 = \\frac{1}{1+(\\Omega/\\Omegac)^{2N}}|{\\Omega == - \\frac{35-\\hat\\Omega^2}{2\\hat\\Omega} }$$ Then plot in MATLAB Bandstop Filter DesignDesired stopband edges of bandstop filter: $\\hat\\Omega{s1},\\hat\\Omega{s2}$ Stopband edge of prototype lowpass filter:: $\\Omega_s$ Spectral Transformation $$ s = \\Omegap \\frac{\\hat{s}(\\hat\\Omega{s2} - \\hat\\Omega{s1})}{\\hat{s}^2 + \\hat\\Omega{s1}\\hat\\Omega_{s2}}$$ On the imaginary axis $$ \\Omega = -\\Omegap \\frac{\\hat\\Omega(\\hat\\Omega{s2}-\\hat\\Omega{s1})}{\\hat\\Omega{s1}\\hat\\Omega_{s2} - \\hat\\Omega^2}$$ Band edges exhibit symmetry with respect to centre frequency $$ \\hat\\Omega0^2 = \\hat\\Omega{p1}\\hat\\Omega{p2} = \\hat\\Omega{s1}\\hat\\Omega_{s2}$$","categories":[{"name":"Signal","slug":"Signal","permalink":"http://yoursite.com/categories/Signal/"}],"tags":[]},{"title":"python+opencv 生成/解码 QRcode","slug":"python-QRcode","date":"2017-07-06T23:19:45.000Z","updated":"2017-07-07T04:19:12.904Z","comments":true,"path":"2017/07/07/python-QRcode/","link":"","permalink":"http://yoursite.com/2017/07/07/python-QRcode/","excerpt":"","text":"虽然对于一个二维码的图片可以直接用zbar的库进行解码，但是想了想还是折腾一下原理性的东西吧，所以还是用python+opencv去识别，顺便学习下opencv以及二维码的一些原理 本渣渣在图像识别上还是个纯萌新，折腾这个就当学习了 二维码生成QR码是一种特殊类型的条形码，可以对数字，字母和汉字字符等信息进行编码。 本文以 Error Correction Level = H; MaskNumber = 7; Mode Name=”Byte Mode” 文本内容 “Shikin loves Rabby”; Version = 3; 为例进行二维码生成 数据编码添加Mode Indicator Mode Name Mode Indicator Numeric Mode 0001 Alphanumeric Mode 0010 Byte Mode 0100 Kanji Mode 1000 ECI Mode 0111 选取为Byte Mode ， 因此Mode Indicator 为 0100 添加 Character Count IndicatorCharacter Count Indicator 是一串比特序列来表示信息的长度，以 Shikin loves Rabby 为例， 长度为18，因此对应的二进制的比特为10010 对应不同Byte Mode 和 二维码的版本 Character Count Indicator长度不同 Vsersions 1 - 9 Numeric mode: 10 bits Alphanumeric mode: 9 bits Byte mode: 8 bits Japanese mode: 8 bits Versions 10 - 26 Numeric mode: 12 bits Alphanumeric mode: 11 bits Byte mode: 16 Japanese mode: 10 bits Versions 27 - 40 Numeric mode: 14 bits Alphanumeric mode: 13 bits Byte mode: 16 Japanese mode: 12 bits 因此，Character Count Indicator 为 00010010 组合之前的Byte Mode Indicator 为 0100 00010010 数据编码Byte Mode中，对字符串的编码为ASCII码，因此很容易得到 Shikin loves Rabby 的数据编码为 01010011 01101000 01101001 01101011 01101001 01101110 00100000 01101100 01101111 01110110 01100101 01110011 00100000 01010010 01100001 01100010 01100010 01111001 综合起来为 Mode Indicator Character Count Indicator Encode Data 0100 00010010 01010011 01101000 01101001 01101011 01101001 01101110 00100000 01101100 01101111 01110110 01100101 01110011 00100000 01010010 01100001 01100010 01100010 01111001 增加Terminator 使得 编码之后的字符长度为8的倍数，Terminator 为对应个数的’0’ 在本例中 Mode Indicator Character Count Indicator Encode Data Terminator 0100 00010010 01010011 01101000 01101001 01101011 01101001 01101110 00100000 01101100 01101111 01110110 01100101 01110011 00100000 01010010 01100001 01100010 01100010 01111001 0000 在Eerror Correction Table 中可以看到 3-H的Total Number of Data Codewords 为26个，但是现在编码之后的码字为20个Byte的Codewords，因此需要在后面补充完整。在之后的数据中交替添加 11101100 和 00010001，因此完整编码之后的数据为 Mode Indicator Character Count Indicator Encode Data Terminator Pad 0100 00010010 01010011 01101000 01101001 01101011 01101001 01101110 00100000 01101100 01101111 01110110 01100101 01110011 00100000 01010010 01100001 01100010 01100010 01111001 0000 11101100 00010001 11101100… 其对应的数据用十进制表示为 [65, 37, 54, 134, 150, 182, 150, 226, 6, 198, 247, 102, 87, 50, 5, 38, 22, 38, 39, 144, 236, 17, 236, 17, 236, 17] 以上部分对应的Python 代码如下 123456789101112131415161718192021222324252627282930313233343536def chr2int(string): temp = [] for i in string: temp.append(ord(i)) return tempdef dec2bi (data): temp = [] for i in data: t = bin(i) t = t[2:] for j in range(8-len(t)): t = '0' + t temp.append(t) return tempmode_indicator = [0,1,0,0]count = [0,0,0,1,0,0,1,0]data_len = 26 * 8string = 'Shikin loves Rabby'int_data = chr2int(string)bi_data = dec2bi(int_data)data = []for i in bi_data: for j in i: data.append(int(j))data = mode_indicator + count + data 得到的data为二进制的bit序列包含了Mode Indicator，Character Count Indicator，Byte Mode编码后的数据 print data [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1] 随后补充’0’直到数据是8的倍数 123for i in range(len(data) % 8): data.append(0) 随后进行Pad添加，直到数据的Byte数达到26个 12345678910111213141516def complete(data): c1 = [1,1,1,0,1,1,0,0] c2 = [0,0,0,1,0,0,0,1] flag = 0 global data_len while( len(data) &lt; data_len): if flag == 0: for i in c1: data.append(i) flag = 1 else: for i in c2: data.append(i) flag = 0complete(data) 随后转换成十进制 方便观看以及分组 123456789int_data = []data.reverse()while(len(data) != 0): temp = 0 for i in range(8): temp = data.pop() + temp * 2 int_data.append(temp) 纠错码编码二维码使用Reed Solomon编码，不想写的太长，干脆直接用库去编码。 本文在github 上找到一个Reed Solomon编码的库 在Eerror Correction Table 中，3-H中有两个block，因此需要对int_data分成两组 12block_1 = int_data[:13]block_2 = int_data[13:] 随后使用Reed Solomon的库进行编码 12345678910111213141516171819202122232425262728from reedsolo import *b1 = ''b2 = ''for i in block_1: b1 += chr(i)for i in block_2: b2 += chr(i)b1a = bytearray()b2a = bytearray()b1a.extend(b1)b2a.extend(b2)rs = RSCodec(22)c_1 = rs.encode(b1a)c_2 = rs.encode(b2a)code1 = []code2 = []for i in range(len(c_1)): code1.append(int(c_1[i])) code2.append(int(c_2[i]))rs_code_1 = code1[13:]rs_code_2 = code2[13:] rs_code_1与rs_code_2分别为两个block编码之后的数据 组成最终信息最终的信息是两个数据的block进行交替排列，然后两个纠错码的block进行排列，然后转换成二进制 12345678910111213for i in range(len(block_1)): data.append(block_1[i]) data.append(block_2[i])for i in range(len(rs_code_1)): data.append(rs_code_1[i]) data.append(rs_code_2[i])data = dec2bi(data)temp = []for i in data: for j in i: temp.append(int(j)) Format InformationFormat Information 中 前五位为Format String Error Correction Level Bits L 01 M 00 Q 11 H 10 因此Fromat String 为 10111 随后进行纠错码的编码 对于二进制的10位的generator polynomial 为10100110111 编码步骤如下： 首先通过在格式字符串的右侧放置十个字符，创建一个15位字符串，如下所示：10111 - &gt; 101110000000000 现在从左侧删除任何0（此处没有0）：101110000000000 - &gt; 101110000000000 1.使用0来填充右边的生成多项式字符串，使其与当前format string的长度相同。 10100110111 -&gt; 101001101110000 与 format string 长度相同 101110000000000 2.使用当前格式字符串对填充的生成多项式字符串进行XOR。 000111101110000 为异或后的结果 3.从结果的左侧移除0。 111101110000 我们必须划分多项式，直到得到的format string为10或更少位长。如果位长大于是继续进行1 2 3的步骤。 最后得到的15位的数据与101010000010010 进行异或 得到完整的Fromat Information 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051def copy(d1,d2): for i in range(len(d1)): d2.append(d1[i]) return d2def add_z(data, length): temp = data for i in range(length - len(data)): temp.append(0) return tempdef xor_list (l1,l2): list_ = [] for i in range(len(l1)): list_.append(l1[i] ^ l2[i]) return list_def delete_z(data): while(data[0] == 0): data = data[1:] return dataecl_mask = [1,0,1,1,1]em = []em = copy(ecl_mask,em)gp = [1,0,1,0,0,1,1,0,1,1,1]t_em = add_z(ecl_mask,15)t_gp = add_z(gp,15)t_result = xor_list(t_em,t_gp)t_result = delete_z(t_result)while(len(t_result) &gt; 10): t_em = add_z(t_result,len(t_result)) t_gp = add_z(gp,len(t_result)) t_result = xor_list(t_em,t_gp) t_result = delete_z(t_result)if(len(t_result) != 10): t_result.reverse() t_result = add_z(t_result,10) t_result.reverse()#print t_resultfor i in t_result: em.append(i)mask = [1,0,1,0,1,0,0,0,0,0,1,0,0,1,0]em = xor_list(em,mask) Format Information 对应的位置如图所示 对应坐标为 12345#draw format informationfi_co1 = [[8,0],[8,1],[8,2],[8,3],[8,4],[8,5],[8,7],[8,8],[7,8],[5,8],[4,8],[3,8],[2,8],[1,8],[0,8]]fi_co2 = [[28,8],[27,8],[26,8],[25,8],[24,8],[23,8],[22,8],[21,8],[8,22],[8,23],[8,24],[8,25],[8,26],[8,27],[8,28]]fi_co1.reverse()fi_co2.reverse() 然后发现反了，需要reverse一下 二维码图像Function Patterns Finder Pattern：位于三个角落，可以快速检测二维码位置。 Separators：一个单位宽的分割线，提高二维码位置检测的效率。 Timing Pattern：黑白相间，用于修正坐标系。 Alignment Patterns：提高二维码在失真情况下的识别率。 数据排列 对于Version 3的数据排列如下图所示 因此需要按顺序获取坐标，因为萌新，所以硬着头皮写了def get_track(): # get track of data x = 1 y = 17 flag = 0 data_co = [[x,y]] # part 1 while(x != 1 or y!= 9): if flag == 0: x = x - 1 y = y - 1 flag = 1 else: x = x + 1 flag = 0 data_co.append([x,y]) # part 2 x = x + 1 flag = 0 data_co.append([x,y]) while ( x!=3 or y != 20): if flag == 0: x = x + 1 flag = 1 else : x = x - 1 y = y + 1 flag = 0 data_co.append([x,y]) # part 3 x = x + 1 flag = 0 data_co.append([x,y]) x = x + 1 data_co.append([x,y]) while(x != 5 or y!= 9): if flag == 0: x = x - 1 y = y - 1 flag = 1 else: x = x + 1 flag = 0 data_co.append([x,y]) # part 4 x = x + 2 flag = 0 data_co.append([x,y]) while ( x!=8 or y != 20): if flag == 0: x = x + 1 flag = 1 else : x = x - 1 y = y + 1 flag = 0 data_co.append([x,y]) # part 5 flag = 1 x = 9 y = 28 data_co.append([x,y]) while(x != 10 or y!= 0): if flag == 0: x = x - 1 y = y - 1 flag = 1 else: x = x + 1 flag = 0 if y == 6: y = y - 1 data_co.append([x,y]) # part 6 flag = 0 x = x + 1 data_co.append([x,y]) while ( x!=12 or y != 28): if flag == 0: x = x + 1 flag = 1 else : x = x - 1 y = y + 1 flag = 0 if y == 6: y = y + 1 data_co.append([x,y]) # part 7 flag = 1 x = x + 1 data_co.append([x,y]) while(x != 14 or y!= 0): if flag == 0: x = x - 1 y = y - 1 flag = 1 else: x = x + 1 flag = 0 if y == 6: y = y - 1 data_co.append([x,y]) # part 8 flag = 0 x = x + 1 data_co.append([x,y]) while ( x!=16 or y != 28): if flag == 0: x = x + 1 flag = 1 else : x = x - 1 y = y + 1 flag = 0 if y == 6: y = y + 1 data_co.append([x,y]) # part 9 flag = 1 x = x + 1 data_co.append([x,y]) while(x != 18 or y!= 0): if flag == 0: x = x - 1 y = y - 1 flag = 1 else: x = x + 1 flag = 0 if y == 6: y = y - 1 data_co.append([x,y]) # part 10 flag = 0 x = x + 1 data_co.append([x,y]) while ( x!=19 or y != 20): if flag == 0: x = x + 1 flag = 1 else : x = x - 1 y = y + 1 flag = 0 if y == 6: y = y + 1 data_co.append([x,y]) # part 11 flag = 0 for i in range(5): y = y + 1 data_co.append([x,y]) # part 12 flag = 0 while ( x!=20 or y != 28): if flag == 0: x = x + 1 flag = 1 else : x = x - 1 y = y + 1 flag = 0 if y == 6: y = y + 1 data_co.append([x,y]) # part 13 flag = 1 x = x + 1 data_co.append([x,y]) while(x != 22 or y!= 9): if flag == 0: x = x - 1 y = y - 1 flag = 1 else: x = x + 1 flag = 0 if y == 24: y = 19 data_co.append([x,y]) # part 14 flag = 0 x = x + 1 data_co.append([x,y]) while ( x!=24 or y != 28): if flag == 0: x = x + 1 flag = 1 else : x = x - 1 y = y + 1 flag = 0 if y == 20: y = 25 data_co.append([x,y]) # part 15 flag = 1 x = x + 1 data_co.append([x,y]) while(x != 26 or y!= 9): if flag == 0: x = x - 1 y = y - 1 flag = 1 else: x = x + 1 flag = 0 data_co.append([x,y]) # part 14 flag = 0 x = x + 1 data_co.append([x,y]) while ( x!=28 or y != 28): if flag == 0: x = x + 1 flag = 1 else : x = x - 1 y = y + 1 flag = 0 data_co.append([x,y]) return data_codata_co = get_track()data_co.reverse() 最后发现画反了，需要reverse一下 添加maskMask Pattern中对应的Mask Number = 7的公式为 ( ((row + column) mod 2) + ((row * column) mod 3) ) mod 2 == 0 1234567data = []for i in range(len(temp)): row = data_co[i][1] column = data_co[i][0] formula = (( ((row + column) % 2) + ((row * column) % 3) ) % 2) data.append(temp[i] ^ formula) 绘制二维码坐标 以及 数据 获取之后绘制二维码就很简单了 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980#draw QRcodeimport numpy as npimport cv2def show(img): cv2.namedWindow(\"Image\") cv2.imshow(\"Image\",img) cv2.waitKey(0) cv2.destroyAllWindows()def draw_rect(ct,scl,cl): p1 = [ct[0]-scl,ct[1]-scl] p2 = [ct[0]-scl,ct[1]+scl] p3 = [ct[0]+scl,ct[1]+scl] p4 = [ct[0]+scl,ct[1]-scl] sq = np.array([p1,p2,p3,p4], np.int32) cv2.fillPoly(img, [sq], (cl,cl,cl))img = np.zeros((310,310,3), np.uint8)draw_rect([155,155],155,255)# draw timing patternw = 5tp = 5tp_fix = 75color = 255while tp &lt; 290: if color == 0: draw_rect([tp,tp_fix],w,color) draw_rect([tp_fix,tp],w,color) color = color ^ 255 tp = tp + 10### draw Finder Patternsdraw_rect([45,45],35,0)draw_rect([45,45],25,255)draw_rect([45,45],15,0)draw_rect([265,45],35,0)draw_rect([265,45],25,255)draw_rect([265,45],15,0)draw_rect([45,265],35,0)draw_rect([45,265],25,255)draw_rect([45,265],15,0)def co2pt(co): pt = [0,0] pt[0] = co[0] * 10 + 15 pt[1] = co[1] * 10 + 15 return pt# draw Format Informationfor i in range(len(em)): pt1 = co2pt(fi_co1[i]) pt2 = co2pt(fi_co2[i]) color = (em[i]^1) if color == 0: draw_rect(pt1,w,color) draw_rect(pt2,w,color)# draw datafor i in range(len(data)): pt = co2pt(data_co[i]) color = data[i] if color == 0: draw_rect(pt,w,color)# draw Alignment Patternsdraw_rect([225,225],25,0)draw_rect([225,225],15,255)draw_rect([225,225],5,0)show(img)","categories":[],"tags":[]},{"title":"windos环境下搭建python+opencv","slug":"python-opencv","date":"2017-06-24T06:53:02.000Z","updated":"2017-06-24T09:24:25.361Z","comments":true,"path":"2017/06/24/python-opencv/","link":"","permalink":"http://yoursite.com/2017/06/24/python-opencv/","excerpt":"","text":"本人用的是python-2.7.13 + numpy-1.10.2 + opencv-3.2.0 可以点击找到下载地址 python numpy opencv python 安装下载安装完成python之后，打开IDLE可以看到安装的版本号以及是32位还是64位 如图，安装的版本为2.7.13，并且是32位的。 numpy 安装安装完成numpy之后，在IDLE中输入 import numpy 没有报错说明成功安装numpy并且可以导入，输入 print numpy.__version__ 可以看到安装的版本 OPENCV安装下载安装OPENCV后，将~\\opencv\\build\\python\\2.7\\x86\\cv2.pyd文件复制到 ~\\Python27\\Lib\\site-packages文件夹中 然后输入 import cv2 没有报错说明安装成功","categories":[{"name":"python","slug":"python","permalink":"http://yoursite.com/categories/python/"}],"tags":[]},{"title":"re-call","slug":"re-call","date":"2017-06-22T23:56:44.000Z","updated":"2017-06-23T02:09:39.433Z","comments":true,"path":"2017/06/23/re-call/","link":"","permalink":"http://yoursite.com/2017/06/23/re-call/","excerpt":"","text":"回忆如何用hexo在blog/source/_post 路径下 右键点击选择 Git Bash Here 然后输入 hexo new re-call [re-call 为title的名字] 于是在blog/source/_post 中生成了一个re-call.md的文件之后直接编辑即可 然后就是hexo g和hexo d","categories":[{"name":"recall","slug":"recall","permalink":"http://yoursite.com/categories/recall/"}],"tags":[]},{"title":"电机模型在Simulink中的实现","slug":"motor-model","date":"2016-07-26T05:11:40.000Z","updated":"2016-07-26T09:37:54.280Z","comments":true,"path":"2016/07/26/motor-model/","link":"","permalink":"http://yoursite.com/2016/07/26/motor-model/","excerpt":"","text":"在MATLAB的Simulink下的直流电机模型与简介。 电学模型基本介绍$$\\begin{align}i(t) &amp;= C\\cfrac{du}{dt}\\\\u(t) &amp;= L\\cfrac{di}{dt}\\\\end{align}$$公式 (1) 是电容器件与所加电压和流过的电流的关系公式 (2) 是电感器件与所加电压和流过的电流的关系 电机电学模型电机是电感型的器件，所以对应的是公式(2)并且控制输入的电压值所以需要进行公式变形将公式(2)进行变形，写成积分的形式如下$$\\begin{align}i(t) = \\cfrac{1}{L}\\int{}u(t)dt\\\\end{align}$$将公式 (3) 所表示的内容在Simulink中实现如下图 输入的电压乘以电感的倒数然后积分得到电流。 电机模型的修正由于电感实际上也是有电阻的那么在模型中真正用于积分的电压需要减去电阻分去的电压因此模型电学模型修正如下图 电感电阻的分压由电流乘以电阻得到。那么电学的模型在此可以告一段落了，接下来介绍力学的模型。 力学模型基本介绍角加速度，转动惯量，扭矩的关系如公式(4)所示$$\\begin{align}T = J\\beta\\end{align}$$其中T是扭矩，J是转动惯量，β是角加速度。 电机力学模型角加速度的积分得到角速度，也就是得到转速，则公式变为 $$\\begin{align}\\omega = \\cfrac{1}{J}\\int{}Tdt\\end{align}$$ 公式 (5) 在Simulink模型中实现如图 电机力学模型修正在真实中电机旋转时存在一定的阻尼,存在一个扭矩，且该扭矩与转速成正比电机也存在负载，因此存在一个负载的扭矩因此对上述模型需要进行修正 电机的输入的扭矩需要减去负载的扭矩和阻尼所产生的扭矩 电机模型基本介绍电机产生的扭矩与电流成正比电机旋转之后存在一个反向电动势，于转速成正比用公式表示如下$$\\begin{align}E &amp;= K_e \\omega\\\\T &amp;= K_m I\\end{align}$$其中E为反向电动势，T为电机的扭矩 模型合并 左边部分为电学量，右边部分为力学量。电学量与力学量之间由系数Ke和Km进行转换。就此得到完整的电机模型。具体的系数需要参考电机的手册以及进行测量得到。","categories":[{"name":"MicroMouse","slug":"MicroMouse","permalink":"http://yoursite.com/categories/MicroMouse/"}],"tags":[]},{"title":"PD Controller Implement in Simulink","slug":"PD-Controller","date":"2016-07-25T06:34:18.000Z","updated":"2016-07-25T08:38:15.053Z","comments":true,"path":"2016/07/25/PD-Controller/","link":"","permalink":"http://yoursite.com/2016/07/25/PD-Controller/","excerpt":"","text":"PD Controller Implement in Simulink. It is very simple model so that if I forget how to build a PID controller system, I can use this model to build a simple PID controller system. PID Pseudo Code The parameters Kp, Ki and Kd can be calculated by Simulink. In this guide, We implement a PD Controller, so we only need concentrate on Kp and Kd PD model in SimulinkHere is the model in Simulink. you can find every block in Simulink and add it to model. The block Zere-Order Hold and Intergrator are only used to get the measured position, so in Robot model, these two blocks are not really exist. Then we must unify the sample time. (The block Delay, PD controller and Zero-Order Hold) The feedback signal is position. As for Velocity feedback, it is the derivative of position and generated in PD controller block. Here is the Signal Builder which generates the simulation signal for desired position. Here is the configuration of PD controller ‘Controller’ is selected as PD. ‘Sample time’ is set as 0.001. Then you need click ‘Apply’ button so that you can click ‘Tune…’ button for next interface. Here is the PID Tuner. In this interface, you can set proper ‘Respose Time’ and click ‘Update Block’ button if you are satisfied with the curve. By the way, you can click ‘Show Parameters’ button to see the parameters here and of course you can see the parameters in PD controller configuration. ##Simulation Result The 1st diagram is the Disired position The 2nd diagram is the Measured position The 3rd diagram is the Velocity THe 4th diagram is the Velocity error Not Tested Code123456789101112float p_m,p_d; // inputfloat err,err_delay,kp,kd,v,v_delay; // processfloat v_err // outputvoid Timer_Handler() // timer handler function in MCU and it just ensures the Sample time is 1ms&#123; p_m = get_position(); // get the measured position err_delay = err; // get error delay err = p_d - p_m; // get error v_delay = v; // get velocity delay v = kp*err + kd * (err-err_delay)/0.001; // calculate the velocity and 0.001 is the sample time v_err = v - v_delay; // calculate the velocity error&#125;","categories":[{"name":"PID learning","slug":"PID-learning","permalink":"http://yoursite.com/categories/PID-learning/"}],"tags":[]},{"title":"卡尔曼滤波器","slug":"kalman-filter","date":"2016-07-24T14:22:54.000Z","updated":"2017-09-01T10:51:58.496Z","comments":true,"path":"2016/07/25/kalman-filter/","link":"","permalink":"http://yoursite.com/2016/07/25/kalman-filter/","excerpt":"","text":"卡尔曼滤波器是最佳线性滤波器，有着实现简单并且纯时域变换的特点。 卡尔曼滤波器公式$$\\begin{align}\\hat{x}t^- &amp; = F\\hat{x}{t-1} + Bu_t \\pt^- &amp; = FP{t-1}F^T+Q \\\\hat{x}_t &amp; = \\hat{x}_t^- + K_t(Z_t-H\\hat{x}_t^-) \\K_t &amp; = P_t^-H^T(HP_t^-H^T+R)^{-1} \\P_t &amp; = (I-K_tH)P_t^-\\end{align}$$ 简单小车运动模型运动学公式假设小车在路上行驶，其状态用$$\\begin{align} \\hat{x}_{t-1}^- = [\\begin{matrix} p \\ v \\end{matrix}]\\end{align}$$p是小车在t-1时刻的位置，v是小车在t-1时刻的速度。在不考虑状态量$u_t$的情况下，下一时刻状态为$$\\begin{align} \\hat{x}t^-=F\\cdot \\hat{x}{t-1}^-\\end{align}$$ 其中F为状态转移矩阵，在该模型中，F为 $$\\begin{align} F = [\\begin{matrix} 1 &amp; \\Delta t \\ 0 &amp; 1 \\end{matrix}]\\end{align}$$ 在考虑状态量$u_t$的情况下，得到卡尔曼滤波器的第一个公式 $$\\begin{align} \\hat{x}t^- &amp; = F\\hat{x}{t-1} + Bu_t\\end{align}$$ 在该模型中，我们假设这个控制量为加速度，则矩阵B可以表示为 $$\\begin{align} B = [\\begin{matrix} \\cfrac{1}{2}\\Delta t^2 \\ \\Delta t \\end{matrix}]\\end{align}$$ 这样我们得到运动学公式 噪声在这里，我们假设的噪声都是高斯分布的噪声，其方差为$\\sigma $。在该模型中协方差矩阵为 $$\\begin{align} P{t-1} =[ \\begin{matrix} \\sigma {11} &amp;\\sigma {12}\\ \\sigma {21} &amp;\\sigma _{22} \\end{matrix}]\\end{align}$$ 这里正对角系数 $\\sigma {11}$ 和 $\\sigma {22}$ 分别为位置和速度的测量噪声的方差。 反对角系数 $\\sigma {12} = \\sigma {21}$ 为噪声的相关性 $$\\begin{aligned}\\dot{x} &amp; = \\sigma(y-x) \\\\dot{y} &amp; = \\rho x - y - xz \\\\dot{z} &amp; = -\\beta z + xy \\ \\dot{z} &amp; = x_x\\end{aligned}$$","categories":[{"name":"MicroMouse","slug":"MicroMouse","permalink":"http://yoursite.com/categories/MicroMouse/"}],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2016-07-21T02:12:01.760Z","updated":"2016-07-21T02:12:01.763Z","comments":true,"path":"2016/07/21/hello-world/","link":"","permalink":"http://yoursite.com/2016/07/21/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"lsm9ds1陀螺仪寄存器的配置","slug":"hello","date":"2016-07-21T00:28:20.000Z","updated":"2016-07-21T19:05:34.279Z","comments":true,"path":"2016/07/21/hello/","link":"","permalink":"http://yoursite.com/2016/07/21/hello/","excerpt":"","text":"配置用于MicroMouse的陀螺仪。 需求加速度测量量程 +-2g最高采样率使用 pypass mode 不使用中断(INT)不使用高通滤波器(High Pase Filter)不使用低通滤波器(Low Pase Filter)不使用FIFO 配置表 REG Address Data 10h DBh 11h 00h 12h 00h 1Eh 38h 20h C4h 21h 00h 22h 04h 23h 00h 24h 00h 2Eh 00h","categories":[{"name":"MicroMouse","slug":"MicroMouse","permalink":"http://yoursite.com/categories/MicroMouse/"}],"tags":[]}]}